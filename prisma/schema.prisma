generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id         Int      @id @default(autoincrement())
  street     String
  city       String
  state      String
  zip        String
  country    String
  isDefault  Boolean  @default(false)
  customerId Int
  Customer   Customer @relation(fields: [customerId], references: [id])
  Order      Order[]
}

model Customer {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  email     String    @unique
  phone     String?
  createdAt DateTime  @default(now())
  Address   Address[]
  Order     Order[]
  Review    Review[]
}

model Order {
  id                Int         @id @default(autoincrement())
  orderDate         DateTime    @default(now())
  totalAmount       Float
  status            String      @default("PENDING")
  customerId        Int
  shippingAddressId Int?
  Customer          Customer    @relation(fields: [customerId], references: [id])
  Address           Address?    @relation(fields: [shippingAddressId], references: [id])
  OrderItem         OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  unitPrice Float
  orderId   Int
  productId Int
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String      @db.VarChar(255)
  description String?
  price       Float
  stock       Int
  category    String?
  createdAt   DateTime    @default(now())
  imageSrc    Bytes?
  OrderItem   OrderItem[]
  Review      Review[]
}

model Review {
  id         Int      @id @default(autoincrement())
  rating     Int      @default(5) @db.SmallInt
  comment    String?
  createdAt  DateTime @default(now())
  customerId Int
  productId  Int
  Customer   Customer @relation(fields: [customerId], references: [id])
  Product    Product  @relation(fields: [productId], references: [id])

  @@unique([customerId, productId])
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  role      String   @default("ADMIN")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}
